import"./style.css";import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import*as dat from"dat.gui";const canvas=document.getElementById("three-canvas"),scene=new THREE.Scene,geometry=new THREE.SphereGeometry(.7,64,64),textureLoader=new THREE.TextureLoader,texture=textureLoader.load("textures/NormalMap.png"),image=textureLoader.load("textures/world.jpg"),material=new THREE.MeshStandardMaterial({color:"gray",metalness:.75,roughness:.75,normalMap:texture,map:image}),sphere=new THREE.Mesh(geometry,material);scene.add(sphere);const pointLight=new THREE.PointLight(16777215,2);pointLight.position.x=2,pointLight.position.y=3,pointLight.position.z=4,scene.add(pointLight);const pointLight2=new THREE.PointLight(16711680,3.7);pointLight2.position.set(1.1,.89,-.1),scene.add(pointLight2);const pointLight3=new THREE.PointLight(30069,4.5);pointLight3.position.set(-1.26,-1.16,-.43),scene.add(pointLight3);const sizes={width:canvas.clientWidth,height:canvas.clientHeight};window.addEventListener("resize",(()=>{sizes.width=canvas.clientWidth,sizes.height=canvas.clientHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height,.1,100);camera.position.x=0,camera.position.y=0,camera.position.z=2,scene.add(camera);const renderer=new THREE.WebGLRenderer({canvas,alpha:!0});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));let mouseX=0,mouseY=0,targetX=0,targetY=0;const windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,onMouseMove=e=>{mouseX=e.clientX-windowHalfX,mouseY=e.clientY-windowHalfY},onScroll=e=>{},clock=new THREE.Clock;document.addEventListener("mousemove",onMouseMove),window.addEventListener("scroll",onScroll);const tick=()=>{const e=clock.getElapsedTime();sphere.rotation.y=.5*e,targetX=.001*mouseX,targetY=.001*mouseY,sphere.rotation.x+=.5*(targetY-sphere.rotation.x),sphere.rotation.y+=.05*(targetX-sphere.rotation.y),sphere.position.z+=-.5*(targetY-sphere.rotation.x),renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick();